
/* getBboxMAxSize
*/
[RoutineDef, getBboxMaxSize
, /* function */
	[VarSet, xyzsize, 0]
	[VarSet, xsize, 0]
	[VarSet, ysize, 0]
	[VarSet, zsize, 0]

	[RoutineCall, getAllSubToolsBoundingBox,3 ,xyzsize,xsize,ysize,zsize]


	/* FIND WHICH AXIS HAS HIGHEST VALUE*/
	[If, xsize > ysize, // THEN
		[VarSet, maxSize, xsize ], // ELSE
		[VarSet, maxSize, ysize ]]

	[If, zsize > maxSize, // THEN
		[VarSet, maxSize,zsizexsize ] ]


, /* parameters or output */
	maxSize
]

/* Get size of subtool in mm
   * Size of Tool muliplied with export scale is size in milimeters
   *
   * @return value of ticknes to get shell of thickness 1 milimeter
*/
[RoutineDef, getThicknessInMilimeters
, /* function */

	[VarSet, maxSize, 0]

	[RoutineCall, getBboxMaxSize,  maxSize]

	/* GET TOOL SIZE IN MILIMETERS */
	[VarSet, milimetersSize, [IGet, Tool:Export:scale] * maxSize  ]


	[VarSet, thickness, 1 / milimetersSize * 2 ] // scale * size in mm * 2 becasue of twho sides of object

, /* parameters or thickness */

	thickness
]

/* Set value of native controls precomputed from milimeters to 0-1 scale
*/
[RoutineDef, setSubtoolThicknessValue
, /* function */

	[VarSet, thicknessInMilimeters, 0]

	[RoutineCall, getThicknessInMilimeters, thicknessInMilimeters ]

	[VarSet, thisSliderValue, [IGet, [StrMerge, CONTROLSPATH,"Thickness"]]]

	[VarSet, thickness, thicknessInMilimeters * thisSliderValue * -1 ]
	//[Note, [StrMerge, "thickness: ", thickness ] ]
	[ISet,Tool:SubTool:Thick, thickness ]
]

/* Set value of % decimation
*/
[RoutineDef, setDecimationValue
, /* function */
	[ISet, "Zplugin:Decimation Master:% of decimation", [IGet, [StrMerge, CONTROLSPATH,"Decimation"]] ]
]


/**
  *
  */
[RoutineDef, SubToolIsVisible,

	[VarSet, isVisible, 0]
	[VarSet,st,[SubToolGetStatus,id]]
	[VarSet,fInd,[SubToolGetFolderIndex,id]]

	[If,(fInd > -1),//it's in a folder

		[VarSet,stFld,[SubToolGetStatus,fInd]]//get folder visibility

		[If,([Val,stFld]&0x2 == 0x2)&&([Val,st]&0x1 == 0x1), [VarSet,isVisible,1] ] , //else no folder

		[If,([Val,st]&0x1 == 0x1), [VarSet,isVisible,1] ]
	]

 ,isVisible,id
]

/* subtoolVisibility
*/
[RoutineDef, subtoolVisibility
, /* function */

	[VarSet, SubtoolActiveInex, [SubToolGetActiveIndex]]

	[If, #state != 0, // THEN
		[VarSet, press, 34], // ELSE
		[VarSet, press, 2]]


		[SubToolSelect, index ]

        [VarSet, subtoolName, [IGetTitle, "Tool:Current Tool"]]
		[VarSet, subtoolControl, [StrMerge, "Tool:SubTool:", subtoolName] ]

		[IModSet,subtoolControl, press]

		[SubToolSelect, SubtoolActiveInex ]

,
	index, state /* 0|1 */
]

/* RENAME SUBTOOL
*/
[RoutineDef, renameSubtool
,
	//[RoutineCall, CheckSystem]

	[VarSet, button_path, "Tool:SubTool:Rename"]
	//set button_path to the button you want
	//"Tool:SubTool:Rename" - for SubTool
	//"Tool:Layers:Rename" - for Layers
	//"Preferences:Transpose Units:Set Units" - for Transpose Units
	[If, (([IExists, button_path]) && ([IsEnabled, button_path])),
	  [FileExecute, [Var, ZFILEUTILSDLL], RenameSetNext, new_name]
	  [IPress, button_path]
	]
, /* parameters */
	new_name
]

/* set boolean mode 'Add' on curren subtool
*/
[RoutineDef, setBooleanAdd
,
	[SubToolSelect, [SubToolGetActiveIndex] - 1 ]
	[VarSet, subtoolShellSource, [StrMerge, "Tool:SubTool:", [IGetTitle, Tool:Current Tool ]]]
	[VarSet,wid,[IWidth,subtoolShellSource]]
	[IClick, subtoolShellSource  ,wid-100,5] //Set Boolean Add

]

/* set boolean mode 'Subrstract' on curren subtool
*/
[RoutineDef, setBooleanSubstract
,
	[VarSet, innerExtractedSubtool, [StrMerge, "Tool:SubTool:", [IGetTitle, Tool:Current Tool ]]]
	[VarSet,wid,[IWidth,innerExtractedSubtool]]
	[IClick,innerExtractedSubtool,wid-75,5] // Set boolean substract
]



/* Get Bounding Box of all|visible subtools

*/
[RoutineDef,getAllSubToolsBoundingBox,

	[VarSet, xmin, 0]
	[VarSet, ymin, 0]
	[VarSet, zmin, 0]
	[VarSet, xmax, -1]
	[VarSet, ymax, -1]
	[VarSet, zmax, -1]

	[If,visibleonly,
		[VarSet,Opt,2]
	,
		[VarSet,Opt,3]
	]

	// Get bounding box of all Subtools
	[Mesh3DGet, 2, Opt,, xmin, ymin, zmin, xmax, ymax, zmax]
	[VarSet,xsize,ABS(xmin-xmax)]
  	[VarSet,ysize,ABS(ymin-ymax)]
  	[VarSet,zsize,ABS(zmin-zmax)]
  	[VarSet,xyzsize,MAX(xsize,ysize)]
  	[VarSet,xyzsize,MAX(xyzsize,zsize)]

,visibleonly,xyzsize,xsize,ysize,zsize]
